{"version":3,"sources":["logo.svg","zip.jsx","App.js","reportWebVitals.js","index.js"],"names":["ZipFetch","props","handleZipChange","event","setState","zipC","target","value","handleSumbit","preventDefault","handleSearching","zipArray","state","zip","theZip","map","items","Zipcode","foundZip","loading","axios","get","this","data","console","error","className","onSubmit","placeholder","type","onChange","onClick","City","State","EstimatedPopulation","TotalWages","Recordnumber","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAAe,I,6ECGMA,E,kDAEjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAsBVC,gBAAkB,SAAAC,GACd,EAAKC,SAAS,CACVC,KAAMF,EAAMG,OAAOC,SAzBR,EA6BnBC,aAAe,SAACL,GACZA,EAAMM,kBA9BS,EAiCnBC,gBAAkB,WAEd,IAAIC,EAAW,EAAKC,MAAMC,IACtBC,EAAS,EAAKF,MAAMP,KACxBM,EAASI,KAAI,SAAAC,GACNA,EAAMC,UAAYH,EAErB,EAAKV,SAAS,CACVc,UAAW,IAGf,EAAKd,SAAS,CACVc,UAAW,QA3CnB,EAAKN,MAAQ,CACXC,IAAK,GACLM,SAAS,EACTd,KAAM,GACNa,UAAU,GANG,E,yMAYGE,IAAMC,IACpB,8C,OADER,E,OAGJS,KAAKlB,SAAS,CAAES,IAAKA,EAAIU,KAAMJ,SAAS,I,gDAGxCK,QAAQC,MAAR,M,8IAkCF,OACI,gCACI,qBAAKC,UAAY,QAAjB,SACI,uBAAMC,SAAUL,KAAKd,aAArB,UACI,qBAAKkB,UAAY,qBAAjB,SACI,oBAAIA,UAAY,eAAhB,+BAEJ,uBAAOA,UAAY,eAAeE,YAAc,aAAYC,KAAO,OAAOtB,MAASe,KAAKV,MAAMP,KAAMyB,SAAYR,KAAKpB,kBAJzH,IAImJ,uBAC/I,wBAAQwB,UAAY,eAAeK,QAAWT,KAAKZ,gBAAnD,yBAKHY,KAAKV,MAAMP,KAGRiB,KAAKV,MAAMM,SACX,qBAAKQ,UAAY,YAAjB,SACKJ,KAAKV,MAAMC,IAAIE,KAAI,SAAAC,GAAK,OACtB,gCACI,+BAAKA,EAAMgB,KAAX,KAAmBhB,EAAMiB,SAC7B,qBAAIP,UAAY,eAAhB,UACI,yCACaV,EAAMiB,SAEnB,4CACgBjB,EAAMiB,SAEtB,0DAC6BjB,EAAMkB,uBAEnC,+CACmBlB,EAAMmB,gBAXQnB,EAAMoB,sBAiBhD,KAxBN,8BAAK,qE,GApEaC,IAAMC,WCU7BC,MARf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,cAAC,EAAD,OCISc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.46f21927.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class ZipFetch extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          zip: [],\r\n          loading: true,\r\n          zipC: '',\r\n          foundZip: false,\r\n        };\r\n      }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n          let zip = await axios.get(\r\n            'http://ctp-zip-api.herokuapp.com/zip/10016'\r\n          );\r\n          this.setState({ zip: zip.data, loading: false, });\r\n          \r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n    }\r\n\r\n\r\n    handleZipChange = event => {\r\n        this.setState({\r\n            zipC: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSumbit = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleSearching = () =>\r\n    {\r\n        let zipArray = this.state.zip;\r\n        let theZip = this.state.zipC;\r\n        zipArray.map(items => {\r\n            if(items.Zipcode === theZip)\r\n        {\r\n            this.setState({\r\n                foundZip : true,\r\n            })\r\n        }else{\r\n            this.setState({\r\n                foundZip : false,\r\n            })\r\n        }\r\n        })\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <div className = \"Happy\">\r\n                    <form onSubmit={this.handleSumbit}>\r\n                        <div className = \"ZipCodeSearchTitle\">\r\n                            <h1 className = \"ZipCodeTitle\">Zip Code Search</h1>\r\n                        </div>\r\n                        <input className = \"zipCodeInput\" placeholder = \"zipcode...\"type = \"text\" value = {this.state.zipC} onChange = {this.handleZipChange}></input> <br/>\r\n                        <button className = \"searchButton\" onClick = {this.handleSearching}>Search</button>\r\n                    </form>\r\n                </div>\r\n\r\n                {\r\n                    !this.state.zipC?\r\n                    <div><h3>Please enter a Zip-Code...</h3></div>\r\n                    :\r\n                        this.state.foundZip? \r\n                        <div className = \"Container\"> \r\n                            {this.state.zip.map(items => (\r\n                               <div>\r\n                                   <h3>{items.City}, {items.State}</h3>\r\n                               <ul className = \"informtation\"key = {items.Recordnumber}>\r\n                                   <li>\r\n                                        State: {items.State}\r\n                                   </li>\r\n                                   <li>\r\n                                        Location: {items.State}\r\n                                   </li>\r\n                                   <li>\r\n                                       Population (estimated): {items.EstimatedPopulation}\r\n                                   </li>\r\n                                   <li>\r\n                                        Total Wages: {items.TotalWages}\r\n                                   </li>\r\n                               </ul>\r\n                               </div>\r\n                            ))}\r\n                        </div>\r\n                        : null\r\n                }\r\n            \r\n            </div>\r\n                \r\n           \r\n        );\r\n    }\r\n}\r\n\r\n","import logo from './logo.svg';\nimport './App.css';\nimport ZipFetch from './zip';\nimport axios from 'axios';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ZipFetch/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}